description = """Данный фреймворк позволяет описать любую модель управления запасами двумя формулами."""

formulas_description = """
- _Формула нахождения точки пополнения заказа_: формула, которая определяет, _нужно ли_ делать заказ.
Данная формула должна вернуть значение TRUE либо FALSE. Соответственно, если формула возвращает TRUE - 
заказ будет размещен в день вычисления формулы.
- _Формула размера заказа_: формула, которая определяет размер заказа (заказ будет размещен в день, 
когда формула нахождения точки пополнения заказа вернула TRUE).
Формула должна вернуть число (кроме того, формула может быть константой - в этом случае каждый раз будет размещаться 
один и тот же размер заказа)
- _Оценивающая функция_ (опционально): функция, которая должна вернуть число. Данная функция используется для оценки качества модели:
например, формула может суммировать общие затраты (если главной задачей является снижение общих затрат).
"""

constants = """
##### Константы
- `S` - сумма потребления за весь период
- `A` - затраты на заказ
- `I` - затраты на хранение
- `Delivery` - время доставки
- `Delay` - время возможной задержки
- `Consumption` - потребление (последовательность)
"""

variables = """
##### Переменные
- `iDay` - индекс текущего дня (начиная с нуля)
- `curBalance` - баланс текущего дня
- `nOut` - количество отправленных но не привезенных заявок
"""

formulas = """
##### Формулы
- `SUM(<последовательность>)` - суммирует диапазон
- `MEAN(<последовательность>)` - находит среднее значение
- `STD(<последовательность>)` - находит стандартное отклонение величины
- `LEN(<последовательность>)` - возвращает длину последовательности
- `MAX(<последовательность>)` - максимальное число из последовательности
- `MIN(<последовательность>)` - минимальное число из последовательности
- `ABS(<число>)` - возвращает модуль числа
- `SQRT(<число>)` - возвращает корень числа
"""

math_operations = """
##### Математические операции
- `+` - сложение
- `-` - вычитание
- `*` - умножение
- `/` - деление
- `//` - деление нацело
- `%` остаток от деления
- `**` - возведение в степень
"""

logical_operations = """
##### Логические операции (возвращают TRUE либо FALSE)
- `>` - значение слева больше значения справа
- `<` - значение слева меньше значения справа
- `>=` - значение слева больше или равно значения справа
- `<=` - значение слева меньше или равно значения справа
- `==` - значение слева равно значения справа
- `OR` - логическое "или"
- `AND` - логическое "и"
"""

examples = """
Пример:

В соответствии со стилем и синтаксиса данного минифреймворка, можно переписать, например, метод ФРЗ.
Формула нахождения точки пополнения заказа
```logic
balance < (S/LEN(consumption))*delay + delivery*(S/LEN(consumption))
```

_Оценивающая функция_: в формуле оценивающей функции доступны все функции и константы, а также:

- `balance` (<i>последовательность</i>) - остаток на начало дня
- `outcome` (<i>последовательность</i>) - список значений отправленных заявок
- `income` (<i>последовательность</i>) - список значений пришедших заявок


| some | val |
| :-: | :-: |
| ok | then |

"""

SHORT_DOC = f"""
{description}
{formulas_description}
{constants}
{variables}
{formulas}
{math_operations}
{logical_operations}
{examples}
"""

LONG_DOC = f"""
"""
